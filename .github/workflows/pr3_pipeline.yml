name: PR3 Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11"]
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@3542bca2639a428e1796aaa6a2ffef0c0f575566
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run unit tests
      run: |
        PYTHONPATH=. pytest -q tests/

  integration:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
    - name: Set up Python
      uses: actions/setup-python@3542bca2639a428e1796aaa6a2ffef0c0f575566
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Start mock DeepSeek server
      run: |
        python search/mock_deepseek.py &
    - name: Run integration tests
      run: |
        DEEPSEEKMOCK=1 PYTHONPATH=. pytest -q tests/integration/test_end_to_end_pr3.py
    - name: Upload provenance bundle
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: provenance-bundle
        path: .github/PROVENANCE/*-bundle.json

  provenance-check:
    runs-on: ubuntu-latest
    needs: integration
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
    - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093
      with:
        name: provenance-bundle
        path: .github/PROVENANCE
    - name: Validate provenance schema
      run: |
        python - <<'PY'
        import json, glob, sys, os
        from jsonschema import validate, ValidationError

        schema_path = '.github/PROVENANCE_SCHEMA.json'
        prov_dir = '.github/PROVENANCE'
        pattern = os.path.join(prov_dir, '*-bundle.json')

        try:
            schema = json.load(open(schema_path))
        except FileNotFoundError:
            sys.exit(f"Schema not found: {schema_path}")

        files = sorted(glob.glob(pattern))
        if not files:
            sys.exit(f"No provenance bundles found matching: {pattern}")

        failed = False
        for p in files:
            try:
                with open(p, 'r') as f:
                    bundle = json.load(f)
                validate(instance=bundle, schema=schema)
                print(f"Validated: {p}")
            except (json.JSONDecodeError, ValidationError) as e:
                print(f"Validation failed for {p}: {e}")
                failed = True
            except Exception as e:
                print(f"Error reading/validating {p}: {e}")
                failed = True

        if failed:
            sys.exit(1)
        PY
